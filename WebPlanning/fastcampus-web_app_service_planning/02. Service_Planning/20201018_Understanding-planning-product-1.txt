< 02. Service_Planning >

- 프로젝트 기획 산출물의 이해 -

[ 19. 기획 산출물들의 구분과 정의 ]
	1. 기획 산출물의 구분
		1) 비즈니스 관련
			- 정책서
			- 업무 프로세스
			- 화면설계서(SB) : 정책, 프로세스, 와이어프레임, 디스크립션 등이 모두 포함된 설계 문서
			+ 운영가이드매뉴얼
		2) UI 관련
			- 와이어프레임 : UI '배치' 중심의 화면 레이아웃
			- 목업 : 실물과 흡사한 정적인 형태의 모형
			- 화면설계서(SB)
			+ 프로토타입 : 다양한 인터렉션이 결합되어 실제 서비스처럼 작동하는 모형 → 디자인 진행 후 진행
		3) 개발 관련
			- 요구사항정의서
			- 화면설계서(SB)
			- User Story
			- Backlog
			+ Test Case

[ 20. 서비스 정책서 ]
	- 만들어낼 서비스의 뼈대를 구성하게 된다
	- 비즈니스를 이해하는 과정이라 할 수 있다
	
	1. 서비스 정책
		- 서비스의 용어 및 기본 운영 정책을 정의한 프로젝트 산출물
		- 정책 정의를 위해서는 서비스의 '비즈니스 구조'와 '운영 프로세스'가 먼저 확정되어야 한다
		- 정책 설정은 회사의 서비스 방향과 전략이 반영되어야 한다
		- 정책 설정은 화면 UI와 IT 설계의 기분 구조를 결정한다
	
	2. 정책서 작성 순서
		1) 구성요소 찾기
			- 업무 프로세스와 필요한 정책에 대해서 모듈 단위로 구분하여 회의를 통해 파악
			- 정의해야할 용어와 프로세스, 그리고 의사 결정이 필요한 선택적 정책 결정
			- Process Inovation 과정이 필요
		2) 정책서 목차 정의
			- 목차 설정을 통해 정의할 프로세스와 항목 등을 확정하고 작성 범위를 설정
			- 목차의 항목을 기준으로 작성
			- 용어정의, 상태값 정의. 의사결정 정책 정의
			- 표로 단순화하되 직관적 이해되도록 정의
		3) 기존 서비스 정책서의 단점
			- UI/UX에 대한 정의보다는 구현에 집중
			- 고객 이익적 측면의 사상보다 개발과 비즈니스적 이익만 중요시 되지 쉬움
			- Word로 작성 시 업데이트 및 관리가 어려워서 잘 갱신되지 않는다
		4) 대안적 형태의 User Story + 위키(Wiki) 정책서
			- 에자일 방법론 채택한 경우, User story에 연결하여 위키서비스를 만들어서 누구나 접근 및 수정 가능한 오픈 정책서를 운영하기도 한다
			- 오픈 정책서이기에 작성 규칙이 일관되지 않을 수 있거나 누락될 수 있다.

[ 21. 요구사항 정의서 ]
	1. 요구사항 정의서란?
		1) 사전 요구사항 정의서
			- 현업 요청 사항을 정리하여 중요도를 체크한 문서
		2) 요구사항 정의서
			- 현업 요청사항을 바탕으로 만든 서비스 전략에서 기술적으로 필요한 부분을 정리하여 개발에 협업 요청을 하기 위한 문서
			cf) 요구사항 명세서 : 요구사항의 수가 많을 경우, 세부 요구사항을 분석항 요구사항 정의서와 구분하여 번호만 목록화한 요구사항 명세서를 만들어서 전체 요구사항을 관리
	
	2. 요구사항 정의서 작성
		- 서비스의 UI까지 설계 작업을 시작하면서 정책을 세분화하여 기술로 구현하기 위한 모든 범위를 개발 항목 단위로 작성
		1) 목적
			(1) 개발과 사전 커뮤니케이션하여 기획 포함 및 개발 수용 여부 판단
			(2) 최초 요구사항이 누락되지 않도록 화면설계서(SB)까지 관리할 수 있는 기준 마련
		2) 주요 작성 항목
			(1) 구분 : Front, Admin, 기타
			(2) 신규여부 : 신규/기존수정
			(3) 요구사항번호 : 모듈명+숫자
			(4) 요구사항명
			(5) 요구사항 상세 설명, 분석
			(6) 비고 : 다른 요구사항과 연결여부 등
			(7) 개발 수용여부 : Y/N/보류
			(8) 완료여부 : Y/N
	
	3. 요구사항 정의서의 단점과 대안
		1) 단점
			- UI, UX에 대한 정의보다 구현에 집중
			- 정책서에 포함된 내용 기반으로 작성되며 UI, UX와 독립적으로 진행되어 개발담당자가 서비스의 UI, UX를 이해하기 어려울 수 있음
			- 초기 요구사항 정의서에 없는 항목에 대해서는 프로젝트 도중에 추가 어려움
		2) 대안적 형태의 애자일 Backlog
			- 요구사항 정의서 없이 Backlog에 해당 요구사항을 논의 밀 설정
	
	4. 개발자 설득
		- 개발PL의 역할
			- 개발 인적 자원의 분배
			- 기존 시스템의 안정정 유지
			→ 오류 방지 및 시스템 유연성에 대한 책임
		1) 꼭 추가적으로 개발되어야 하는가
			: 기존 시스템으로는 해결이 불가능한가?
		2) 기존 영향도를 최소화할 수 있는가?
			: 기존 진행중인 프로젝트와 중요 모듈에 대한 영향도 최소화한 개발범위로 확정이 가능한가?

[ 22. IA 정의 ]
	1. IA란?
		- 서비스의 정보 구조를 설계하는 것을 의미하며, 대부분의 화면으로 이루어진 서비스의 경우에는 화면간의 상하관계를 정의하고 고객 동선을 관리
		- 과거 PC위주의 페이지단위 사이트의 경우에는 IA가 사이트의 네비게이션을 결정하기 때문에 핵심적인 UX 관리 요소로 중요하게 관리됨
		- 모바일 서비스가 많아지면서 한 페이지가 다수의 페이지의 역할을 대신할 수 있도록 되면서 IA문서는 개발 페이지목록으로의 역할이 더 강해지고 있음
	
	2. IA으 작성 전 작업
		- 마인드맵이나 트리구조를 이용하여 고객의 TASK 동선별 화면 구조 정의
		- 한 화면 내 통합할 수 있는 기능들은 하나의 화면 내에서 통합
		→ 몇개의 화면을 만들 것인가
		
	3. 문서 작성
		1) 화면의 Depth : 트리구조 내 구조 깊이
		2) 페이지명 또는 화면 코드
		3) 페이지 설명
		4) 담당자 구분 : 디자인/개발/어드민
		5) 개발 완료 여부 : Y/S

[ 23. 와이어프레임, 목업, 프로토타이핑 ]
	※ 스케치의 필요성_처음부터 와이어프레임으로 그리려할 경우
		1) 전체적인 UI 전략보다는 '그리드'의 오와 열에 치중하게 됨
		2) 그럴듯하게 화면 채우는 것에 대해 신경쓰이게 됨
		   ## 흐... 내가 그래버렸는디.... ##
		3) 너무 신경써서 한 버전을 그리고 나면 다른 버전을 그리기 싫어짐
	
	1. 와이어프레임의 정의와 작성
		- UI 중심의 화면 레이아웃
		- 서비스의 UI까지 설계 작업을 위한 각 UI 영역의 위치에 대해 컨텐츠 없이 아웃라인만 네모박스 형태로 정의
		- 모바일 서비스로 오면서 UI 표준화가 많이 되면서 각종 목업 그리는 툴들이 활성화되면서 와이어프레임이 좀 더 목업에 가깝게 변화
		- Ajax 등장과 모바일 서비스의 특징으로 한 화면에서도 려어 케이스와 서비스 시나리오 흐름이 생기면서 점차 복잡해지고 목업, 프로토타이핑 형태로 변화
		※ 목업 툴이 뭐가 있는지 알아보는게 좋을까~
	
	2. 목업의 작성과 정의
		- 실물과 흡사한 정적인 형태의 모형
		- 와이어프레임보다 좀 더 상세화하여 컨텐츠의 케이스와 형태를 구분할 수 있을 정도로 UI를 만들어 놓은 페이지
		- 디자이너에게 원하는 UI를 전달하기에 용이하지만, 모바일 환경에서는 여전히 인터렉션을 표시할 수 없는 단점(정적이기 때문에) 존재
		- 대안적 형태로 인터랙션과 상호 관계를 정의하여 한 화면내에서 이동 동선 표시해주는 형태로도 진화
		※ 디자이너의 영역이 있으니, 너무 완벽하게 만들기 보다는 '전달하고자 하는 것'이 무엇인지를 작성하는데 초점을 맞추자
	
	3. 페이퍼 목업 테스트란?
		- 목업 상태에서 종이로 오리거나 잘라서 사용자에게 Task에 따라서 이용하도록 하여 고객 사용성을 테스트
		- 기획 단계에서 신규 서비스의 UI나 동선 인사이트를 얻을 수 있음
	
	4. 프로토타이핑과 사용성테스트
		- 다양한 인터렉션이 결합되어 실제 서비스처럼 작동하는 모형
		- 목업 또는 시안상태에서 간단히 인터랙션을 구현하여 모바일폰 또는 디바이스에서 사용해볼 수 있도록 만든 가짜 앱
		- 사용성테스트와 협업자간 서빗스 이해를 위해서 작업
		- 회사 R&R에 따라 기획자나 디자이너가 작업하며 그 수준도 회사에 따라 다르다
	
	+ 화면설계서(storyboard)
		- 정책, 프로세스, 와이어프레임, 디스크립션 등이 모두 포함된 설계 문서

[ Today my impression ]
뭣도 모르고 그렸던 화면설계서에서 지난 2주간 상무님이 개발에 들어가며 발견된 수많은 기획적 오류와 허점들이 서비스에 대한 이해와 고민을 더 깊고 신중하게 해야되고, 데이터에 대한 고민과, 기획서를 그리는 와중에도 수없이 많은 질문들을 관련인들에게 했어야 했다는 점을 알게 됐고,
1차년도 개발이 완료될때 까지 아직도 수없이 많은 허점이 드러날 것이니까 멘탈을 잘 붙잡도록 해보자...