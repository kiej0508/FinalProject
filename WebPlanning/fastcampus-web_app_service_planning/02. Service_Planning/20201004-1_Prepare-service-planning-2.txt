< 02. Service_Planning >

[ 11. 서비스의 성장전략과 생태계의 형성 ]
	1. 서비스의 생애주기
		- 온라인 서비스도 Product기 때문에 제품 수면주기에 따른다
	
	2. 서비스의 개발 단계 : MVP 중심의 데이터 고려한 설계
		- 빠르고 도전적인 MVP(Most viable PRoduct)를 개발
		- but 성장을 위한 데이터 전략이 필요
	
	3. 서비스의 등장과 성장 단계 : 선순환 구조
		- 어떻게 서비스가 혼자서 굴러갈 수 있게 만들 것인가?
		- 서비스 핵심 프로세스를 지속적으로 강화시킬 선순환 구조로 성장을 견인
		  참고) 네트워크 효과
	
	4. 서비스 프랫폼과 생태계의 형성
		- 플랫폼이란?
			: 공급자와 수요자가 가치교환, 상호작용을 할 수 있는 생태계
			→ 서비스의 선순환을 만들게 되는...
		- 온라인 서비스 플랫폼은 개방성과 매칭을 전개로 한 거래의 장을 지향하며, 네트워크 효과를 통해 높은 트래픽을 이뤄서 생태계를 확장한다
	
	5. 서비스 기획의 구성요소 총 정리
		1) 서비스명
		2) 시장분석 : 시장 세분화 및 시장 규모 추정
		3) 비즈니스 모델 : UCD 방법론을 통한 고객 Pain Point와 가치 제안
		4) 수익모델 : 비용과 수익 구조
		5) 핵심 프로세스
		6) 선순환 성장 전략
		7) 최종 목표 생태계 Vision

[ 12. 온라인 서비스 구조의 이해 ]
	1. 온라인 서비스의 구조와 기획
		- 온라인 서비스는 데이터의 입력과 출력의 구성
		- 서비스 내에서 입출력할 데이터를 기획
		* 사용자 → Device → Network → DNS Server → 개발 Server → DB Server
		  ↳ 기획을 할 때는 입력할 데이터와 출력할 데이터에 대한 고려가 선행되어야 함
	
	2. 기획 템플릿의 이해
		- '템플릿이란 각 페이지 단위로 룰을 정해놓은 것'을 의미
		- 온라인 서비스한 함수처럼 입력된 행동이나 값에 대해서 정해놓은 정책과 룰에 따라 정확한 아웃풋을 산출할 수 있도록 만들어진 기능들의 집합
		- 룰이나 규칙 없이 임의로 출력값을 고정시켜 놓는 경우는 Hard coding
	
	3. 서비스 레벨과 화면 레벨의 구분
		1) 판매상품 Admin 등록
		2) 상품 전시
		3) 주문하기
		- 서비스 레벨과 화면 레벨을 구성하고 정의할 수 있어야 서비스 기획에 있어서 내가 무엇을 해야하는지 알 수 있는 것
		=======
		콜드체인의 '주문현황'은 서비스 레벨 / '주문분석'은 화면 레벨?
		콜드체인 어차피 뒤집어 엎어야하는데... 근데 너무 크게 뒤집어 엎는건 안되겠지
		근데 이미 실장님, 대표님, 투비소프트에서 오케이한거를 어느정도까지 뒤집어 엎을 수 있는걸까?
		=======
	
	4. 화면 템플릿의 이해
		- 도메인으로 보는 템플릿과 입력 데이터 지정 예시
	
	※ 온라인 서비스의 구축 기획은 서비스 레벨과 템플릿 레벨에서 데이터의 입력과 출력 정책을 정하는 것이다.
	그렇다면, 앱과 웹 서비스는 무엇을 고려해야 할까?

[ 13. 웹/앱 서비스의 이해 ]
	1. 대표적 온라인 서비스 : 웹 / 앱
		구분				PC 웹			모바일 웹		네이티브 앱
		------------	--------------	-----------	---------------
		기본 인터렉션 도구	마우스				손가락 터치		손가락 터치, 각종 센서
		인터렉션 종류		클릭, 마우스오버, 휠	제스쳐			제스쳐
		데이터 로딩 단위		페이지 이동/AJAX	페이지이동/AJAX	모듈 단위 로딩
		주요 구성			F형 UI 패턴		I형 UI패턴, 컨텐츠 분할 로딩
		* F형, I형 : 사용자 시선이 많이 머무는 형태
	
	2. 웹 : 반응형 웹과 적응형 웹
		1) 반응형 웹 : 화면의 가로 크기에 따라 계속 다른 UI형태를 보여주는 퍼블리싱 형태
		2) 적응형 웹 : 기준 가로 크기에 따라 2~3벌의 퍼블리싱 형태로 보여주는 웹
		- Landscape, Portrait : UI 재조정 여부, 혹은 비회전여부 결정 필요
	
	3. 앱 : 네이티브 앱과 하이브리드 앱
		1) 웹 앱 : 기본 브라우저를 사용
		2) 하이브리드 앱 : 앱 안에서 웹 뷰를 띄워서 사용하는 거
		3) 네이티브 앱 : 센서를 사용하거나 여러 API를 사용할 수 있음
	
	※ 안드로이드 개발자옵션 WOW;;;
	※ 웹가 앱의 구조와 장단점이 다르기에 서비스에 적합한 방식을 선택해야 한다.

[ Today my impression ]
미처 모르고있던 팁들(안드로이드 개발자옵션 등)을 알게되었다는 점에서 일단 성공했다고 본다 ㅇㅅㅇ 나는 뭐 하나 알면 일벌리기 선수니까!